{"ast":null,"code":"import _toConsumableArray from \"/Users/philip/Desktop/chatapp/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/philip/Desktop/chatapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/philip/Desktop/chatapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/philip/Desktop/chatapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/philip/Desktop/chatapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/philip/Desktop/chatapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/philip/Desktop/chatapp/src/NewChat.js\";\nimport React from \"react\";\nimport io from \"socket.io-client\";\nvar port = process.env.PORT || 8080;\n\nvar NewChat =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NewChat, _React$Component);\n\n  function NewChat(props) {\n    var _this;\n\n    _classCallCheck(this, NewChat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewChat).call(this, props));\n    _this.state = {\n      username: '',\n      message: '',\n      messages: []\n    };\n    _this.newSocket = io('/chat2'); // this.socket = io('localhost:8080');\n\n    _this.newSocket.on('RECEIVE_MESSAGE', function (data) {\n      addMessage(data);\n    });\n\n    var addMessage = function addMessage(data) {\n      console.log(data);\n\n      _this.setState({\n        messages: _toConsumableArray(_this.state.messages).concat([data])\n      });\n\n      console.log(_this.state.messages);\n    };\n\n    _this.sendMessage = function (ev) {\n      ev.preventDefault();\n\n      _this.newSocket.emit('SEND_MESSAGE', {\n        author: _this.state.username,\n        message: _this.state.message\n      });\n\n      _this.setState({\n        message: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewChat, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Global Chat 2\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"messages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.state.messages.map(function (message) {\n        return React.createElement(\"div\", {\n          key: message.username,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, message.author, \": \", message.message);\n      }))), React.createElement(\"div\", {\n        className: \"card-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: this.state.username,\n        onChange: function onChange(ev) {\n          return _this2.setState({\n            username: ev.target.value\n          });\n        },\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Message\",\n        value: this.state.message,\n        onChange: function onChange(ev) {\n          return _this2.setState({\n            message: ev.target.value\n          });\n        },\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.sendMessage,\n        className: \"btn btn-primary form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Send\"))))));\n    }\n  }]);\n\n  return NewChat;\n}(React.Component);\n\nexport default NewChat;","map":{"version":3,"sources":["/Users/philip/Desktop/chatapp/src/NewChat.js"],"names":["React","io","port","process","env","PORT","NewChat","props","state","username","message","messages","newSocket","on","data","addMessage","console","log","setState","sendMessage","ev","preventDefault","emit","author","map","target","value","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport io from \"socket.io-client\";\n\nvar port = process.env.PORT || 8080;\n\nclass NewChat extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            username: '',\n            message: '',\n            messages: []\n        };\n\n        this.newSocket = io('/chat2');\n\n        // this.socket = io('localhost:8080');\n\n        this.newSocket.on('RECEIVE_MESSAGE', function(data){\n            addMessage(data);\n        });\n\n        const addMessage = data => {\n            console.log(data);\n            this.setState({messages: [...this.state.messages, data]});\n            console.log(this.state.messages);\n        };\n\n        this.sendMessage = ev => {\n            ev.preventDefault();\n            this.newSocket.emit('SEND_MESSAGE', {\n                author: this.state.username,\n                message: this.state.message\n            })\n            this.setState({message: ''});\n\n        }\n    }\n\n\n    render(){\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <div className=\"card-title\">Global Chat 2</div>\n                                <hr/>\n                                <div className=\"messages\">\n                                {this.state.messages.map(message => {\n                                  return (\n                                    <div key={message.username}>{message.author}: {message.message}</div>\n                                    )\n                                  })}\n                                </div>\n                            </div>\n                            <div className=\"card-footer\">\n                                    <input type=\"text\" placeholder=\"Username\" value={this.state.username} onChange={ev => this.setState({username: ev.target.value})} className=\"form-control\"/>\n                                    <br/>\n                                    <input type=\"text\" placeholder=\"Message\" value={this.state.message} onChange={ev => this.setState({message: ev.target.value})} className=\"form-control\"/>\n                                    <br/>\n                                    <button onClick={this.sendMessage} className=\"btn btn-primary form-control\">Send</button>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NewChat;\n"]},"metadata":{},"sourceType":"module"}